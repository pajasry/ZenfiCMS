# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

input CreatePageInput {
  description: String!
  name: String!
  statusId: String
}

input CreatePasswordInput {
  password: String!
  token: String!
}

input CreateUserInput {
  email: String!
  password: String!
  username: String!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

input LoginInput {
  email: String!
  password: String!
}

type LoginOutput {
  token: String!
  user: UsersEntity!
}

type Mutation {
  createPage(createPageInput: CreatePageInput!): PageOutput!
  createPassword(createPasswordInput: CreatePasswordInput!): Boolean!
  createUser(createUserInput: CreateUserInput!): UserOutput!
  deletePage(id: String!): Boolean!
  login(loginInput: LoginInput!): LoginOutput!
  resetPassword(resetPasswordInput: ResetPasswordInput!): Boolean!
  updatePage(id: String!, updatePageInput: UpdatePageInput!): PageOutput!
}

type PageOutput {
  item: PagesEntity
}

type PagesEntity {
  author: UsersEntity!
  createdAt: DateTime!
  description: String!
  id: String!
  name: String!
  path: String!
  status: PublicationStatusesEntity!
  updatedAt: DateTime!
}

type PagesOutput {
  count: Float!
  items: [PagesEntity!]!
}

type PostOutput {
  item: PostsEntity
}

type PostsEntity {
  author: UsersEntity!
  createdAt: DateTime!
  description: String!
  id: String!
  name: String!
  status: PublicationStatusesEntity!
  updatedAt: DateTime!
}

type PostsOutput {
  count: Float!
  items: [PostsEntity!]!
}

type PublicationStatusOutput {
  item: PublicationStatusesEntity
}

type PublicationStatusesEntity {
  id: String!
  name: String!
  variant: String!
}

type PublicationStatusesOutput {
  count: Float!
  items: [PublicationStatusesEntity!]!
}

type Query {
  createPage(createPageInput: CreatePageInput!): PageOutput!
  me: UserOutput!
  page(id: String, path: String): PageOutput!
  pages(skip: Int = 0, take: Int = 25): PagesOutput!
  post(id: String!): PostOutput!
  posts(skip: Int = 0, take: Int = 25): PostsOutput!
  publicationStatus(id: String!): PublicationStatusOutput!
  publicationStatuses: PublicationStatusesOutput!
  settings: SettingsOutput!
  user(id: String!): UserOutput!
  users: UsersOutput!
}

input ResetPasswordInput {
  email: String!
}

type SettingsEntity {
  googleAnalyticsId: String
  id: String!
}

type SettingsOutput {
  item: SettingsEntity
}

input UpdatePageInput {
  description: String
  name: String
  statusId: String
}

type UserOutput {
  item: UsersEntity
}

type UsersEntity {
  createdAt: DateTime!
  email: String!
  id: String!
  updatedAt: DateTime!
  username: String!
}

type UsersOutput {
  count: Float!
  items: [UsersEntity!]!
}